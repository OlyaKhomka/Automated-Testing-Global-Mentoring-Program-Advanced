name: Playwright Tests
on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  schedule:
    - cron: '*/5 * * * *'
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run linting (Optional if you use ESLint or similar tools)
      - name: Run linting
        run: npm run eslint
      
      # Step 5: Install Playwright browsers
      - name: Install Playwright browsers
        run: npx playwright install

      # Step 6: Create .env file using GitHub secrets 
      - name: Create .env file from secrets
        run: |
          echo "USER_EMAIL=${{ secrets.USER_EMAIL }}" >> .env
          echo "USER_PASSWORD=${{ secrets.USER_PASSWORD }}" >> .env
          echo "BASE_URL_LOCAL=${{ secrets.BASE_URL_LOCAL }}" >> .env
          echo "BASE_URL_PROD=${{ secrets.BASE_URL_PROD }}" >> .env
          echo "DASHBOARD_NAME=${{ secrets.DASHBOARD_NAME }}" >> .env

      # Step 7: Run tests
      - name: Run tests in PROD. not headed
        run: TEST_ENV=prod TEST_FRAMEWORK=playwright npx playwright test --project=chromium --reporter=junit --output=./test-results/

      - name: Upload test results artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: test-results/

      - name: Publish test results
        uses: actions/upload-test-report@v2
        with:
          path: test-results/*.xml